# signal_generator.py
"""
信号生成模块
"""
import numpy as np

def generate_signal(duration=10, num_points=1000, base_freq=5, noise_mean=0, noise_std=0.5):
    """
    生成含噪声的正弦信号。

    参数:
    duration (float): 信号时长，单位秒。
    num_points (int): 采样点数量。
    base_freq (float): 正弦信号的基频，单位Hz。
    noise_mean (float): 高斯白噪声的均值。
    noise_std (float): 高斯白噪声的标准差。

    返回:
    tuple: (time_axis, noisy_signal)
        time_axis (numpy.ndarray): 时间轴。
        noisy_signal (numpy.ndarray): 含噪声的正弦信号。
    """
    # 根据实验要求，时间轴0-10秒，采样点1000个
    # 这意味着采样频率 fs = num_points / duration = 1000 / 10 = 100 Hz
    # 但滤波器模块要求 fs=1000Hz。这里存在矛盾。
    # 我们将遵循信号生成模块的字面要求，并假设后续的 fs 会被正确传递。
    # 或者，更常见的做法是指定 fs 和 duration，然后计算 num_points。
    # 假设：duration 和 num_points 是主要约束，fs 从此导出用于信号生成。
    # 如果滤波器模块的 fs=1000Hz 是硬性规定，那么 num_points 应为 duration * fs。
    #
    # 按照实验要求 "时间轴：0-10秒，采样点1000个"
    time_axis = np.linspace(0, duration, num_points, endpoint=False) # endpoint=False 更适合FFT

    # 生成正弦信号
    clean_signal = np.sin(2 * np.pi * base_freq * time_axis)

    # 生成高斯白噪声
    noise = np.random.normal(noise_mean, noise_std, num_points)

    # 叠加噪声
    noisy_signal = clean_signal + noise

    # 计算实际采样率，供后续模块使用
    fs_actual = num_points / duration
    print(f"[信号生成模块] 生成信号：时长={duration}s, 点数={num_points}, 实际采样率={fs_actual:.2f} Hz, 基频={base_freq}Hz")

    return time_axis, noisy_signal, fs_actual

if __name__ == '__main__':
    # 测试信号生成模块
    import matplotlib.pyplot as plt

    # 实验要求参数
    DURATION_SEC = 10
    NUM_SAMPLES = 1000
    BASE_FREQUENCY = 5
    NOISE_STD_DEV = 0.5

    t, sig, fs_sig = generate_signal(duration=DURATION_SEC,
                                 num_points=NUM_SAMPLES,
                                 base_freq=BASE_FREQUENCY,
                                 noise_std=NOISE_STD_DEV)

    plt.figure(figsize=(10, 4))
    plt.plot(t, sig)
    plt.title("原始信号时域图 (Signal Generator Test)")
    plt.xlabel("时间 (秒)")
    plt.ylabel("幅值")
    plt.grid(True)
    plt.show()

    print(f"生成的信号采样率: {fs_sig} Hz")